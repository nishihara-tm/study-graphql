#image: tmaier/docker-compose:latest
image: docker:20.10.14
services:
  - name: docker:dind
    alias: docker

# variables:
#   DOCKERIZE_VERSION: v0.6.1
#   DOCKER_BUILDKIT: 1
#   COMPOSE_DOCKER_CLI_BUILD: 1
#   DOCKER_DRIVER: overlay2

variables:
  DOCKER_TLS_CERTDIR: ""
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_DRIVER: overlay2

before_script:
  # - apk add --update-cache --no-cache docker-compose git bash
  - apk add --update-cache --no-cache bash git

build:
  script:
    # - docker-compose up -d --build db
    # - docker-compose up -d api
    # - docker-compose exec -T api bundle install
    # - docker-compose exec -T api rails db:create
    # - git fetch origin feature/test_gitlab #ここは${CI_MERGE_REQUEST_TARGET_BRANCH_NAME}に置き換える
    # - git checkout feature/test_gitlab
    # - docker-compose exec -T api rails ridgepole:apply
    # - git fetch origin feature/test_gitlab_2 #ここは${CI_MERGE_REQUEST_TARGET_BRANCH_NAME}に置き換える
    # - git stash
    # - git checkout feature/test_gitlab_2
    # - docker-compose exec -T api ridgepole --config config/database.yml --file db/Schemafile --apply --dry-run #ここは環境に合わせて変更する
    # - result=$(docker-compose exec -T api ridgepole --config config/database.yml --file db/Schemafile --apply --dry-run) #ここは環境に合わせて変更する
    # - echo "$result"
    - test_var="hello"
    - ls -a
    - chmod +x ./add_comment.sh
    - ./add_comment.sh $test_var